task:
  desc: Namespace for configuring the problem to tackle.
  option:
    desc: Specify which problem-domain to run the experiment on
    value:
      1: bandits.Multinoulli
      2: bandits.Multinoulli
  option_kwargs:
    desc: Problem specific keyword arguments to initialize `option`
    value:
      1: { n: 2, alpha: 0.7 }
      2: { n: 2, alpha: 0.7 }
  task_kwargs:
    desc: Keyword arguments for sample-size, IO, dimensionality, etc.
    value:
      1: { }
      2: { }
  task_flags:
    desc: Specify what the Task is used for.
    value:
      1: [producer]
      2: [evaluation]

evaluator:
  desc: Namespace for configuring evaluation of output variables
  problem_seed:
    desc: Specify PRNG-seed value to independently seed the test-environment setup
    value: 0
  artifact_kwargs:
    desc: Keyword arguments specific to how evaluation artifacts are generated
    value: {
      sample_lengths: [ 0, 1, 3, 5, 7, 10, 15, 20, 25, 30, 40, 50, 100, 200 ],
      plot_sample_lengths: [ 0, 1, 5, 10, 30, 100 ],
      num_samples: 32,
      num_predictions: [ 0, 1, 3, 5, 10, 30 ],
      num_predictions_plot: 30,
      resolution: 100,
      num_plots: 1
    }

producer:
  desc: Namespace for configuring generation of example data.
  data_batch_dimensions:
    desc: Dimensions for the data-learner to work with
    value: { data_size: 1, batch_size: 32, length: 10 }

formatter:
  desc: Namespace for configuring how to format generated data for downstream-use.
